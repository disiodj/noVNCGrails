{"version":3,"sources":["rre.js"],"names":["RREDecoder","_subrects","x","y","width","height","sock","display","depth","rQwait","rQshift32","color","rQshiftBytes","fillRect","sx","rQshift16","sy","swidth","sheight"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEqBA,U;AACjB,wBAAc;AAAA;;AACV,SAAKC,SAAL,GAAiB,CAAjB;AACH;;;;+BAEUC,C,EAAGC,C,EAAGC,K,EAAOC,M,EAAQC,I,EAAMC,O,EAASC,K,EAAO;AAClD,UAAI,KAAKP,SAAL,KAAmB,CAAvB,EAA0B;AACtB,YAAIK,IAAI,CAACG,MAAL,CAAY,KAAZ,EAAmB,IAAI,CAAvB,CAAJ,EAA+B;AAC3B,iBAAO,KAAP;AACH;;AAED,aAAKR,SAAL,GAAiBK,IAAI,CAACI,SAAL,EAAjB;AAEA,YAAIC,KAAK,GAAGL,IAAI,CAACM,YAAL,CAAkB,CAAlB,CAAZ,CAPsB,CAOa;;AACnCL,QAAAA,OAAO,CAACM,QAAR,CAAiBX,CAAjB,EAAoBC,CAApB,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCM,KAAtC;AACH;;AAED,aAAO,KAAKV,SAAL,GAAiB,CAAxB,EAA2B;AACvB,YAAIK,IAAI,CAACG,MAAL,CAAY,KAAZ,EAAmB,IAAI,CAAvB,CAAJ,EAA+B;AAC3B,iBAAO,KAAP;AACH;;AAED,YAAIE,MAAK,GAAGL,IAAI,CAACM,YAAL,CAAkB,CAAlB,CAAZ;;AACA,YAAIE,EAAE,GAAGR,IAAI,CAACS,SAAL,EAAT;AACA,YAAIC,EAAE,GAAGV,IAAI,CAACS,SAAL,EAAT;AACA,YAAIE,MAAM,GAAGX,IAAI,CAACS,SAAL,EAAb;AACA,YAAIG,OAAO,GAAGZ,IAAI,CAACS,SAAL,EAAd;AACAR,QAAAA,OAAO,CAACM,QAAR,CAAiBX,CAAC,GAAGY,EAArB,EAAyBX,CAAC,GAAGa,EAA7B,EAAiCC,MAAjC,EAAyCC,OAAzC,EAAkDP,MAAlD;AAEA,aAAKV,SAAL;AACH;;AAED,aAAO,IAAP;AACH","sourcesContent":["/*\r\n * noVNC: HTML5 VNC client\r\n * Copyright (C) 2019 The noVNC Authors\r\n * Licensed under MPL 2.0 (see LICENSE.txt)\r\n *\r\n * See README.md for usage and integration instructions.\r\n *\r\n */\r\n\r\nexport default class RREDecoder {\r\n    constructor() {\r\n        this._subrects = 0;\r\n    }\r\n\r\n    decodeRect(x, y, width, height, sock, display, depth) {\r\n        if (this._subrects === 0) {\r\n            if (sock.rQwait(\"RRE\", 4 + 4)) {\r\n                return false;\r\n            }\r\n\r\n            this._subrects = sock.rQshift32();\r\n\r\n            let color = sock.rQshiftBytes(4);  // Background\r\n            display.fillRect(x, y, width, height, color);\r\n        }\r\n\r\n        while (this._subrects > 0) {\r\n            if (sock.rQwait(\"RRE\", 4 + 8)) {\r\n                return false;\r\n            }\r\n\r\n            let color = sock.rQshiftBytes(4);\r\n            let sx = sock.rQshift16();\r\n            let sy = sock.rQshift16();\r\n            let swidth = sock.rQshift16();\r\n            let sheight = sock.rQshift16();\r\n            display.fillRect(x + sx, y + sy, swidth, sheight, color);\r\n\r\n            this._subrects--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n"]}